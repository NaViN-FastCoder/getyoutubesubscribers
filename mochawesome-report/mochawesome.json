{
  "stats": {
    "suites": 3,
    "tests": 3,
    "passes": 2,
    "pending": 0,
    "failures": 1,
    "start": "2023-03-30T07:11:47.942Z",
    "end": "2023-03-30T07:12:01.221Z",
    "duration": 13279,
    "testsRegistered": 3,
    "passPercent": 66.66666666666666,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "fd948eee-854c-4d7d-b7e7-b41c537d997f",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ce16b1f7-bf70-4eff-99b3-50cd7c8b1d92",
          "title": "GET /",
          "fullFile": "E:\\backendproject\\Subscribers-Mongo-Node-BoilerPlate-main\\src\\app.test.js",
          "file": "\\src\\app.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "responds with a 200 status code",
              "fullTitle": "GET / responds with a 200 status code",
              "timedOut": false,
              "duration": 320,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res=await request(app).get('/');\nexpect(res.statusCode).equal(200);",
              "err": {},
              "uuid": "f34c382c-c7ab-4e0c-a690-fa4d720f3512",
              "parentUUID": "ce16b1f7-bf70-4eff-99b3-50cd7c8b1d92",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f34c382c-c7ab-4e0c-a690-fa4d720f3512"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 320,
          "root": false,
          "rootEmpty": false,
          "_timeout": 6000000
        },
        {
          "uuid": "0c3787ad-0d11-48cc-88c0-e04291190364",
          "title": "GET /subscribers",
          "fullFile": "E:\\backendproject\\Subscribers-Mongo-Node-BoilerPlate-main\\src\\app.test.js",
          "file": "\\src\\app.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "responds with a 200 status code",
              "fullTitle": "GET /subscribers responds with a 200 status code",
              "timedOut": false,
              "duration": 1062,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res=await request(app).get('/subscribers');\nexpect(res.statusCode).equal(200);",
              "err": {},
              "uuid": "a98b3c90-59cf-446a-8af7-c7274596784d",
              "parentUUID": "0c3787ad-0d11-48cc-88c0-e04291190364",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a98b3c90-59cf-446a-8af7-c7274596784d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1062,
          "root": false,
          "rootEmpty": false,
          "_timeout": 6000000
        },
        {
          "uuid": "524c5e55-c8a4-4146-8a65-725aef672bc7",
          "title": "GET /subscribers/names",
          "fullFile": "E:\\backendproject\\Subscribers-Mongo-Node-BoilerPlate-main\\src\\app.test.js",
          "file": "\\src\\app.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "responds with a 200 status code",
              "fullTitle": "GET /subscribers/names responds with a 200 status code",
              "timedOut": false,
              "duration": 10037,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const res=await request(app).get('/subscribers/names');\nexpect(res.statusCode).equal(200);",
              "err": {
                "message": "AssertionError: expected 500 to equal 200",
                "estack": "AssertionError: expected 500 to equal 200\n    at Context.<anonymous> (src\\app.test.js:23:32)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "- 500\n+ 200\n"
              },
              "uuid": "899aa5d6-4ed0-40b2-8ffc-5e640539e0de",
              "parentUUID": "524c5e55-c8a4-4146-8a65-725aef672bc7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "899aa5d6-4ed0-40b2-8ffc-5e640539e0de"
          ],
          "pending": [],
          "skipped": [],
          "duration": 10037,
          "root": false,
          "rootEmpty": false,
          "_timeout": 6000000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 6000000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.2.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": null,
      "version": "5.1.0"
    }
  }
}